"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import dj_database_url #? Importación de la librería dj_database_url para la configuración de la base de datos en producción
from dotenv import load_dotenv #? Importación de la librería dotenv para cargar las variables de entorno
import os #? Importación de la librería os

load_dotenv()  #? Carga de las variables de entorno (paquete dotenv)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = BASE_DIR / 'templates' #? Ruta de la carpeta templates


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2)g((q_0abp!ra)9z=dt0*0)+v*1q+15d@3zuuvdc4bdjdzsfr'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True #? En desarrollo
DEBUG = False #? En producción

# ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['*']
ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'web-production-4c67.up.railway.app'] #? Host de Railway de producción

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home', #? app home
    'anchorsapp', #? app anchorsapp
    'user_auth', #? app user_auth
    'livereload', #? app livereload para recargar la página automáticamente en desarrollo (se ejecuta con el comando python manage.py livereload en una terminal y en la otra python manage.py runserver)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'livereload.middleware.LiveReloadScript', #? Middleware para recargar la página automáticamente en desarrollo
    "django.middleware.security.SecurityMiddleware", #? Middleware de seguridad (Necesario para el paquete whitenoise)
    "whitenoise.middleware.WhiteNoiseMiddleware", #? Middleware para servir archivos estáticos en producción (neceario para el paquete whitenoise)
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR], #? Ruta de la carpeta templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': dj_database_url.config(default=os.getenv('DATABASE_URL'))  #? Configuración de la base de datos en producción
    }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'es-es' #? Cambio de idioma a español

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static'] #? Ruta/s de la/s carpeta/s static
STATIC_ROOT = BASE_DIR / 'staticfiles' #? Ruta de la carpeta staticfiles. Esto es para recolectar los estáticos para producción con el comando python manage.py collectstatic
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage" #? Configuración para servir archivos estáticos en producción (necesario para el paquete whitenoise)

if DEBUG:
    MEDIA_URL = '/media/' #? Url pública del navegador para los archivos multimedia
    MEDIA_ROOT = BASE_DIR / 'media' #? Ubicación de los archivos multimedia
else:
    MEDIA_URL = '/media/' 
    MEDIA_ROOT = BASE_DIR / 'media' 


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'login'  #? Redirige a la vista de login si el usuario no está autenticado
LOGIN_REDIRECT_URL = '/categories/'  #? Redirige a la vista principal después de iniciar sesión
LOGOUT_REDIRECT_URL = '/'  #? Redirige a la página de login después de cerrar sesión

CSRF_TRUSTED_ORIGINS = ['http://*', 'https://web-production-4c67.up.railway.app'] #? Dominio http para localhost, y dominio de producción para el uso de CSRF

